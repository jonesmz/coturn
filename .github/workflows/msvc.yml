name: msvc

on:
  push:
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  compile:
    name: ${{matrix.os}}-vc-${{matrix.BUILD_TYPE}}-${{matrix.BUILD_SHARED_LIBS}}

    strategy:
      matrix:
        BUILD_TYPE: [Release, Debug]
        BUILD_SHARED_LIBS: [OFF, ON]
        os: [windows-2019, windows-2022]

    runs-on: ${{matrix.os}}

    env:
      SOURCE_DIR:  ${{github.workspace}}\.cache\source
      TOOLS_DIR:   ${{github.workspace}}\.cache\tools
      INSTALL_DIR: ${{github.workspace}}\.cache\install_msvc_${{matrix.BUILD_TYPE}}
      VCPKGGITCOMMITID: 53bef8994c541b6561884a8395ea35715ece75db
      VCPKG_PLATFORM_TOOLSET: v143

    defaults:
      run:
        shell: cmd

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: seanmiddleditch/gha-setup-ninja@v5

    - name: make directory
      run: |
        cmake -E make_directory ${{env.SOURCE_DIR}}
        cmake -E make_directory ${{env.TOOLS_DIR}}
        cmake -E make_directory ${{env.INSTALL_DIR}}

    - name: run-vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        # If not using a submodule for vcpkg sources, this specifies which commit
        # id must be checkout from a Git repo. It must not set if using a submodule
        # for vcpkg.
        vcpkgGitCommitId: '${{ env.VCPKGGITCOMMITID }}'

    - name: Configure
      run: |
        cmake ^
            -G Ninja ^
            -S ${{github.workspace}} ^
            -B ${{github.workspace}}/build ^
            -DWITH_MYSQL=OFF ^
            -DCMAKE_BUILD_TYPE=${{matrix.BUILD_TYPE}} ^
            -DBUILD_SHARED_LIBS=${{matrix.BUILD_SHARED_LIBS}} ^
            -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/build/install ^
            -DCMAKE_TOOLCHAIN_FILE=${{env.VCPKG_ROOT}}/scripts/buildsystems/vcpkg.cmake

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.BUILD_TYPE}}

    - name: Install
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.BUILD_TYPE}} --target install

    - name: Package
      if: ${{ matrix.BUILD_TYPE == 'Release' }}
      run: |
        7z a ${{github.workspace}}/build/coturn_windows_msvc.zip ${{github.workspace}}/build/install/*
        cmake --build ${{github.workspace}}/build --config ${{matrix.BUILD_TYPE}} --target package

    - name: Upload
      if: ${{ matrix.os == 'windows-2022' }} && ${{ matrix.BUILD_TYPE == 'Release' }}
      uses: actions/upload-artifact@v4
      with:
        name: coturn_msvc-${{matrix.BUILD_SHARED_LIBS}}
        path: |
          ${{github.workspace}}\build\coturn_windows_msvc.zip
          ${{github.workspace}}\build\coturn*.exe
          ${{github.workspace}}\build\coturn*.md5

##
# 3-Clause BSD License: https://opensource.org/license/bsd-3-clause/
#
# Copyright (C) 2021 Kang Lin <kl222@126.com>
#
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name of the project nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE PROJECT AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE PROJECT OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
##

# - Try to find coturn
#
#  Usage from an external project:
#    In your CMakeLists.txt, add these lines:
#
#    find_package(coturn)
#    target_link_libraries(MY_TARGET_NAME ${coturn_LIBRARIES})
#  
#  This file will define the following variables:
#    coturn_FOUND: True if find coturn, other false
#    coturn_LIBRARIES:  The list of all imported targets for coturn components
#
# Author: Kang Lin <kl222@126.com>

include(FindPackageHandleStandardArgs)

if (NOT coturn_FIND_COMPONENTS)
    set(coturn_FIND_COMPONENTS
        turncommon
        turnclient
        turn_server
	)
endif()

get_filename_component(_coturn_module_paths "${CMAKE_CURRENT_LIST_DIR}" ABSOLUTE)

set(_coturn_FIND_PARTS_REQUIRED)
if (coturn_FIND_REQUIRED)
    set(_coturn_FIND_PARTS_REQUIRED REQUIRED)
endif()
set(_coturn_FIND_PARTS_QUIET)
if (coturn_FIND_QUIETLY)
    set(_coturn_FIND_PARTS_QUIET QUIET)
endif()

foreach(module ${coturn_FIND_COMPONENTS})
    find_package(${module}
        ${_coturn_FIND_PARTS_QUIET}
        ${_coturn_FIND_PARTS_REQUIRED}
        PATHS ${_coturn_module_paths} NO_DEFAULT_PATH
    )
    if(${module}_FOUND)
        list(APPEND coturn_LIBRARIES coturn::${module})
    endif()
    list(APPEND required "${module}_FOUND")  
endforeach()

# Run checks via find_package_handle_standard_args
find_package_handle_standard_args(coturn
	FOUND_VAR coturn_FOUND
	REQUIRED_VARS ${required})
